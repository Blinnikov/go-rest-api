version: '3.8'

services:
  api:
    image: github.com/blinnikov/go-rest-api:latest
    container_name: go-rest-api
    build:
      context: .
    depends_on:
      - postgres
      - rabbit1
      #- seq
    ports:
      - 3000:8443
    volumes:
      - ./configs/apiserver.docker.toml:/app/configs/apiserver.toml
      # - ./certs/ca.go-rest-api.crt:/usr/local/share/ca-certificates/ca.go-rest-api.crt
      - ./certs/go-rest-api.crt:/app/certs/go-rest-api.crt
      - ./certs/go-rest-api.key:/app/certs/go-rest-api.key
    networks:
      - restapi
  
  # Unfortunately for now Seq doesn't work on M1 chip.
  # It's CoreCLR problem that dpesn't support ARM architecture
  # Guys said they were waitnig for .Net 6 release in November 2021 to fix this
  # https://github.com/datalust/seq-tickets/discussions/1189
  seq:
    container_name: seq
    image: datalust/seq:2021.3.6410-pre
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:80
      - 5341
    networks:
      - restapi

  rabbit1:
    image: "rabbitmq:management-alpine"
    hostname: "rabbit1"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq1"
    networks:
      - restapi

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      #PGDATA: /data/postgres
    volumes:
       #- postgres:/data/postgres
       - pg_project:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - restapi
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    #volumes:
       #- pgadmin:/root/.pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - restapi
    restart: unless-stopped

networks:
  restapi:
    driver: bridge

volumes:
    pg_project:
    #postgres:
    #pgadmin: